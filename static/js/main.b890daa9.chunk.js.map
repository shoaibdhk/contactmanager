{"version":3,"sources":["context.js","component/contacts/Contact.js","component/contacts/Contacts.js","component/layout/Header.js","component/pages/About.js","component/layout/TextInputGroup.js","component/contacts/AddContact.js","component/contacts/EditContact.js","component/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","Object","objectSpread","contacts","filter","contact","id","payload","concat","toConsumableArray","map","Provider","_Component","_getPrototypeOf2","_this","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","dispatch","setState","_componentDidMount","inherits","createClass","key","value","asyncToGenerator","regenerator_default","a","mark","_callee","res","wrap","_context","prev","next","axios","get","sent","data","stop","react_default","createElement","props","children","Component","Consumer","Contact","showContactInfo","OnDeleteClick","Axios","delete","_this2","_this$props$contact","name","email","phone","className","onClick","style","cursor","color","float","bind","Link","to","marginRight","Contacts","react","contacts_Contact","Header","branding","href","defaultProps","About","TextInputGroup","_ref","label","placeholder","onChange","error","htmlFor","classnames","is-invalid","PropTypes","string","isRequired","func","AddContact","errors","e","defineProperty","target","onSubmit","_this$state","newContact","preventDefault","keys","post","history","push","_this$state2","layout_TextInputGroup","EditContact","updateContact","match","params","put","NotFound","App","context_Provider","HashRouter","layout_Header","Switch","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b890daa9.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n// Creating a js where we can access the contacts file globally\r\n\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\r\n      };\r\n    case 'ADD_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts]\r\n      };\r\n    case 'UPDATE_CONTACT':\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map(contact =>\r\n          contact.id === action.payload.id ? (contact = action.payload) : contact\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const res = await axios.get('https://jsonplaceholder.typicode.com/users');\r\n    this.setState({ contacts: res.data });\r\n  }\r\n  render() {\r\n    return <Context.Provider value={this.state}>{this.props.children}</Context.Provider>;\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../context';\r\nimport Axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n// For each contact design the down ARROW and Cross button\r\nclass Contact extends Component {\r\n  // Another way to add the propTypes\r\n  // static PropTypes = {\r\n  //   name: PropTypes.string.isRequired,\r\n  //   email: PropTypes.string.isRequired,\r\n  //   phone: PropTypes.string.isRequired\r\n  // };\r\n  state = {\r\n    showContactInfo: false\r\n  };\r\n  OnDeleteClick = async (id, dispatch) => {\r\n    // this.setState({ contacts: state.contacts.filter(contact => contact !== id) });\r\n    await Axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({ type: 'DELETE_CONTACT', payload: id });\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card card-body mb-3'>\r\n              <h4>\r\n                {name}\r\n                <i\r\n                  onClick={() =>\r\n                    // if showContactInfo is true it will set to false and vice-varsa\r\n                    this.setState({\r\n                      showContactInfo: !this.state.showContactInfo\r\n                    })\r\n                  }\r\n                  className='fas fa-sort-down'\r\n                  style={{ cursor: 'pointer' }}\r\n                />\r\n                <i // This will delete the entire contact info by onClick handler of the cross button\r\n                  className='fas fa-times'\r\n                  style={{ cursor: 'pointer', color: 'red', float: 'right' }}\r\n                  onClick={this.OnDeleteClick.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`edit/${id}`}>\r\n                  <i\r\n                    className='fas fa-pencil-alt'\r\n                    style={{ cursor: 'point', float: 'right', color: 'black', marginRight: '1rem' }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {showContactInfo && (\r\n                <ul className='list-group'>\r\n                  <li className='list-group-item'>Email: {email} </li>\r\n                  <li className='list-group-item'>Phone: {phone} </li>\r\n                </ul>\r\n              )}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nContact.propTypes = {\r\n  contact: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Contact;\r\n","import React, { Component, Fragment } from 'react';\r\nimport Contact from './Contact';\r\nimport { Consumer } from '../../context';\r\n\r\nclass Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { contacts } = value;\r\n          return (\r\n            <Fragment>\r\n              <h1 className=\"display-4 mb-4 text-danger\">Contact lists</h1>\r\n              {contacts.map(contact => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nconst Header = props => {\r\n  const { branding } = props;\r\n  return (\r\n    <nav className='navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0'>\r\n      <div className='container'>\r\n        <a href='/' className='navbar-brand'>\r\n          {branding}\r\n        </a>\r\n        <div>\r\n          <ul className='navbar-nav mr-auto'>\r\n            <li className='nav-item'>\r\n              <Link to='/' className='nav-link'>\r\n                <i className='fas fa-home' /> Home\r\n              </Link>\r\n            </li>\r\n\r\n            <li className='nav-item'>\r\n              <Link to='/Add' className='nav-link'>\r\n                <i className='fas fa-plus' /> Add\r\n              </Link>\r\n            </li>\r\n            <li className='nav-item'>\r\n              <Link to='/about' className='nav-link'>\r\n                <i className='fas fa-question' /> About\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\nHeader.defaultProps = {\r\n  branding: 'My App'\r\n};\r\n\r\nHeader.propTypes = {\r\n  branding: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manage</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({ label, name, value, placeholder, type, onChange, error }) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\"> {error} </div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.PropTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string.isRequired\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text'\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport Axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    name.length === 0 ? (errors['name'] = 'Name is required') : delete errors.name;\r\n    email.length === 0 ? (errors['email'] = 'Email is required') : delete errors.email;\r\n    phone.length === 0 ? (errors['phone'] = 'Phone Number is required') : delete errors.phone;\r\n    this.setState({ errors });\r\n\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone\r\n    };\r\n\r\n    if (Object.keys(this.state.errors).length === 0) {\r\n      const res = await Axios.post('https://jsonplaceholder.typicode.com/users', newContact);\r\n      dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n      //Clear State\r\n      this.setState({ name: '', email: '', phone: '', errors: {} });\r\n      this.props.history.push('/');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card mb-3'>\r\n              <div className='card-header'>Add Contact</div>\r\n              <div className='card-body'>\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label='Name'\r\n                    name='name'\r\n                    placeholder='Enter Your name'\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label='Email'\r\n                    type='email'\r\n                    name='email'\r\n                    placeholder='Enter Your email'\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label='Phone'\r\n                    name='phone'\r\n                    placeholder='Enter Your Phone Number'\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <button className='btn btn-success btn-block'>Add Contact</button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default AddContact;\r\n","import React, { Component } from 'react';\r\nimport { Consumer } from '../../context';\r\nimport TextInputGroup from '../layout/TextInputGroup';\r\nimport Axios from 'axios';\r\n\r\nclass EditContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await Axios.get(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n\r\n    let { name, email, phone } = res.data;\r\n    this.setState({ name, email, phone });\r\n  }\r\n  onChange = e => this.setState({ [e.target.name]: e.target.value });\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    name.length === 0 ? (errors['name'] = 'Name is required') : delete errors.name;\r\n    email.length === 0 ? (errors['email'] = 'Email is required') : delete errors.email;\r\n    phone.length === 0 ? (errors['phone'] = 'Phone Number is required') : delete errors.phone;\r\n    this.setState({ errors });\r\n\r\n    const updateContact = { name, email, phone };\r\n    const { id } = this.props.match.params;\r\n    const res = await Axios.put(`https://jsonplaceholder.typicode.com/users/${id}`, updateContact);\r\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n    if (Object.keys(this.state.errors).length === 0) {\r\n      //Clear State\r\n      this.setState({ name: '', email: '', phone: '', errors: {} });\r\n      this.props.history.push('/');\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className='card mb-3'>\r\n              <div className='card-header'>Edit Contact</div>\r\n              <div className='card-body'>\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label='Name'\r\n                    name='name'\r\n                    placeholder='Edit Your name'\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <TextInputGroup\r\n                    label='Email'\r\n                    type='email'\r\n                    name='email'\r\n                    placeholder='Edit Your email'\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <TextInputGroup\r\n                    label='Phone'\r\n                    name='phone'\r\n                    placeholder='Edit Your Phone Number'\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n\r\n                  <button className='btn btn-success btn-block'>Edit Contact</button>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nexport default EditContact;\r\n","import React from 'react';\r\n\r\nexport default () => {\r\n  return (\r\n    <div>\r\n      <h1 className='display-4'>404 Page Not Found</h1>\r\n      <p className='lead'>Sorry, this page or link does not exist</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { Component } from 'react';\nimport { HashRouter as Router, Route, Switch } from 'react-router-dom';\nimport Contacts from './component/contacts/Contacts';\nimport Header from './component/layout/Header';\nimport About from './component/pages/About';\nimport { Provider } from './context';\nimport AddContact from './component/contacts/AddContact';\nimport EditContact from './component/contacts/EditContact';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport './App.css';\nimport NotFound from './component/pages/NotFound';\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider>\n        <Router>\n          <div className='App'>\n            <Header branding='Contact Manager' />\n            <div className='container'>\n              <Switch>\n                <Route exact path='/' component={Contacts} />\n                <Route exact path='/about' component={About} />\n                <Route exact path='/add' component={AddContact} />\n                <Route exact path='/edit/:id' component={EditContact} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}